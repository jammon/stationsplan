(C) Auch Ärzte von Fremdabteilungen sollen angezeigt werden, wenn sie in den angezeigten Funktionen Dienst tun. Sollen dann nicht bearbeitbar sein. +Public
(D) Kommentare oder Nachrichten unabhängig von Änderungen, die beim nächsten Aufruf angezeigt werden
(D) Dienstwünsche eingeben, für jede Person müsste ein User erstellt werden (z.B. 'amm-bot')
(C) Wenn eine Buchung nicht möglich ist, muss die Seite neu dargestellt werden +FIX
(C) Urlaube in der Planungsansicht der Dienste anzeigen
(C) Doppelclick auf voriger oder nächster Monat soll nur einmal wirken
(D) Assets komprimieren
(C) Aktion Aktualisieren ins Menu
(C) Aktualisierung soll auch die Freigabe von Planungen vermitteln
(C) meta description in base.html verbessern
(C) Anordnung der Diensthabenden in der Stationsansicht so, dass sie immer auf einer Reihe sind
(C) Set MySQL Strict Mode +deploy https://docs.djangoproject.com/en/2.2/ref/databases/#mysql-sql-mode
(C) django.views.decorators.http.condition einsetzen https://docs.djangoproject.com/en/3.0/topics/conditional-view-processing/
(C) Write test if redis is running in production (redis.ping)
(C) Write test for caching in production
(C) Write test for http.condition in production
(C) Admin soll nur für die eigene Abteilung Personen anlegen können
(C) pre-commit hook implementieren https://githooks.com/ https://pre-commit.com/
(B) Person.position und Person.anonymous bzw. external überlappen sich in ihrer Funktion
(C) Unverplant-Anzeige des nächsten Tags wird nicht aktualisiert, wenn ein Dienst geplant oder gecancelt wird
(C) Person.anonymous und Person.position=anonymous differenzieren
(C) refactor login_required, permission_required and args from session into one function
(C) SQL-queries in setup
(C) Log user errors
(B) Use Conditional View Processing https://docs.djangoproject.com/en/4.0/topics/conditional-view-processing/
(B) Error reporting https://docs.djangoproject.com/en/4.0/howto/error-reporting/
(B) Logs monitoren +Public
(C) django-hijack installieren +Public +support
(B) Rechtliches für Terminnetz suchen
(B) not_with_this besser definieren - shadowing
(B) ward_type, weight in edit_ward
(B) Navigation für nicht angemeldete Benutzer
(A) Wer nur für eine Abteilung zuständig ist, soll auch nur für die Personen oder Wards anlegen können
(A) Löschen von Bearbeitern ermöglichen, nicht für den angemeldeten Bearbeiter
(A) Punkte aus TODO.md abarbeiten
(B) Use Lighthouse https://developer.chrome.com/docs/lighthouse/overview/ or https://www.webpagetest.org
(A) Auf Staging ausprobiereen
(C) Progressive Web App bauen https://web.dev/new-pwa-training/
pytest fixtures lesen und verstehen https://docs.pytest.org/en/6.2.x/fixture.html
